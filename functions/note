pbnote () {
  local flag_help
  local flag_nonewline
  local flag_timestamp
  local flag_input
  local arg_prefix
  local usage=(
    "Usage:"
    "  pbnote                       save clipboard to default note"
    "  pbnote name                  save clipboard to named note"
    "Options:"
    "  -h --help                    show this message"
    "  -i --input                   prompt for prefix text"
    "  -n --no-newline              do not add empty line"
    "  -p --prefix text             prefix text"
    "  -t --timestamp               add timestamp"
  )

  add_input () {
    local input
    print 'Enter description (^d=exit, ^c=cancel):' \
      && input=$(cat -)
    prefix="${prefix}${input}\n"
  }

  zmodload zsh/zutil
  zparseopts -D -F -- \
    {h,-help}=flag_help \
    {i,-input}=flag_input \
    {n,-no-newline}=flag_nonewline \
    {p,-prefix}:=arg_prefix \
    {t,-timestamp}=flag_timestamp \
    || return 1
  [[ -z "$flag_help" ]] || { print -l $usage && return }

  local editor=(${VISUAL:-${EDITOR:-vi}})
  local note_home=${NOTE_HOME:-~/notes}
  local note_name=(${*:-${NOTE_NAME:-'pasted-'$(date "+%Y-%m-%d")}})

  local content=$(pbpaste | col -b)
  local prefix='\n'

  [[ -a "${note_home}/${note_name}" ]] && [[ -n "${flag_nonewline}" ]] \
    || prefix=''

  [[ -n "$flag_timestamp" ]] && prefix=${prefix}"[$(date)]"'\n'

  [[ -n "$flag_input" ]] && add_input

  print -- ${arg_prefix[-1]}${prefix}${content} >> ${note_home}/${note_name}
  print -- ${arg_prefix[-1]}${prefix}${content}
  print -P "%F{yellow}\[ â‡¨ ${note_name} \]%f"

}
compdef _gnu_generic pbnote


note () {
  local flag_help
  local flag_edit
  local usage=(
    "Usage:"
    "  note                         list notes"
    "  note <name>                  show note"
    "Options:"
    "  -e --edit <name>             edit note"
    "  -h --help                    show this message"
  )
  zmodload zsh/zutil
  zparseopts -D -F -- \
    {h,-help}=flag_help \
    {e,-edit}=flag_edit \
    || return 1
  [[ -z "$flag_help" ]] || { print -l $usage && return }

  local note_home=${NOTE_HOME:-~/notes}
  local editor=(${VISUAL:-${EDITOR:-vi}})

  if [[ -n $* ]]; then
    (
      cd ${note_home}
      if [[ -n "$flag_edit" ]]; then
        eval ${editor} $*
      else
        less -FX $*
      fi
    )
  else
    ls ${note_home}
  fi
}
compdef '_path_files -W "${NOTE_HOME:-${HOME}/notes/}" -g "^.*"' note
alias n='note'
