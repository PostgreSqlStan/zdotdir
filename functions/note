# v0.2
pbnote () {
    # zshoptions setup
    local flag_bullet flag_timestamp flag_help flag_input flag_nonewline
    local arg_title flag_paste
    local usage=(
        "Usage:"
        "  pbnote                       add entry to default note"
        "  pbnote <note name>           add entry named note"
        "Options:"
        "  -b --bullet                  insert bullet"
        "  -d --datetime                add timestamp"
        "  -h --help                    show this message"
        "  -i --input                   prompt for description"
        "  -n --no-newline              no empty line before entry"
        "  -t --title <title>           entry title"
        "  -v --paste                   insert clipboard (copied text)"
    )
    zmodload zsh/zutil
    zparseopts -D -F -- \
        {b,-bullet}=flag_bullet \
        {d,-datetime}=flag_timestamp \
        {h,-help}=flag_help \
        {i,-input}=flag_input \
        {n,-no-newline}=flag_nonewline \
        {t,-title}:=arg_title \
        {v,-paste}=flag_paste \
        || return 1
    [[ -z "$flag_help" ]] || { print -l $usage && return }


    # env PARAMETERS
    local note_home=${NOTE_HOME:-~/notes}
    local note_name=(${*:-${NOTE_NAME:-'pasted-'$(date "+%Y-%m-%d")}})
    local separator=${NOTE_SEPARATOR:-'\n'}  # entry separator
    local note_bullet=${NOTE_BULLET:-'✒️  '}

    local output
    addtext () {
        output=${output}$*
    }

    # heading line
    [[ -n "$flag_bullet" ]] && addtext "${note_bullet}"
    [[ -n "$flag_timestamp"  ]] && addtext '['$(date)'] '
    [[ -n "$arg_title" ]] && addtext "${arg_title[-1]}"
    [[ -n "$output" ]] && addtext "\n"

    local input
    if [[ -n "$flag_input" ]]; then
        print -- "title: ${title}"
        print 'Enter description (^d=exit, ^c=cancel):'
        input=$(cat -)
        addtext "${input}\n"
    fi

    if [[ -n "$flag_paste" ]]; then
        addtext "$(pbpaste | col -b)\n"
    fi

    # prepend separator
    if [[ -a "${note_home}/${note_name}" ]]; then
        if [[ -z "${flag_nonewline}" ]]; then
            output=${separator}${output}
        fi
    fi

    # insert note entry
    print -n -- $output >> ${note_home}/${note_name}
}

# pbnote CHANGES:
# remove NOTE_TEMPLATE
# concatenate output in addtext sub-func
# added -b --bullet option
# add NOTE_BULLET
# added -d --datetime (timestamp) option


note () {
	local flag_help
	local flag_edit
	local usage=(
		"Usage:"
		"  note                         list notes"
		"  note <name>                  show note"
		"Options:"
		"  -e --edit <name>             edit note"
		"  -h --help                    show this message"
	)
	zmodload zsh/zutil
	zparseopts -D -F -- \
		{h,-help}=flag_help \
		{e,-edit}=flag_edit \
		|| return 1
	[[ -z "$flag_help" ]] || { print -l $usage && return }

	local note_home=${NOTE_HOME:-~/notes}
	local editor=(${VISUAL:-${EDITOR:-vi}})

	if [[ -n $* ]]; then
		(
			cd ${note_home}
			if [[ -n "$flag_edit" ]]; then
				eval ${editor} $*
			else
				less -FX $*
			fi
		)
	else
		ls ${note_home}
	fi
}
alias n='note'
