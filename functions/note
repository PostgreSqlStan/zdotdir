note () {
	local _version='0.1'
	local flag_help flag_version flag_edit
	local usage=(
		"note  - display file(s) stored configurable notes directory"
		" "
		"Usage:"
		"  note NOTE                    show NOTE"
		"  note                         list files in notes directory"
		" "
		"Options:"
		"  -e --edit NOTE               edit note"
		"  -h --help                    show this message"
		"  --version                    show version"
		" "
		"Environment parameters:"
		"  NOTE_HOME                    notes directory, default={HOME}/notes"
		" "
		"See repo for updates, comments, issues, etc:"
		"  https://github.com/PostgreSqlStan/note-functions"
	)
	zmodload zsh/zutil
	zparseopts -D -F -- {h,-help}=flag_help -version=flag_version \
		{e,-edit}=flag_edit \
		|| return 1
	[[ -z "$flag_help" ]] || { print -l $usage && return }
	[[ -n "$flag_version" ]] && { print "${0} version ${_version}" && return }

	## MAIN ##
	local note_home=${NOTE_HOME:-~/notes}
	local editor=(${VISUAL:-${EDITOR:-vi}})

	if [[ -n $* ]]; then
		(
			cd ${note_home}
			if [[ -n "$flag_edit" ]]; then
				eval ${editor} $*
			else
				less -FX $*
			fi
		)
	else
		ls ${note_home}
	fi
}
nnote () {
	local _version='0.12'
	emulate -LR zsh
	local flag_help flag_version flag_bullet flag_dts arg_note flag_squeeze
	local flag_paste
	local usage=(
		"nnote  - add entry to default note"
		" "
		"Usage:"
		"  nnote [OPTIONS] [TEXT]       add entry to default note"
		" "
		"Options:"
		"  -b --bullet                  include bullet"
		"  -d --datetime                include date/time"
		"  -h --help                    show this message"
		"  -n --note NOTE               specify NOTE"
		"  -s --squeeze                 no empty line before entry"
		"  -v --paste                   add clipboard to entry"
		"  --version                    show version"
		" "
		"Environment parameters:"
		"  NOTE_HOME                    notes directory, default={HOME}/notes"
		"  NOTE_NAME                    note to create/append, set with -n option"
		"  NOTE_BULLET                  default='▶️  '"
		" "
		"Use the NOTE_NAME paramter to set the default note name for the current "
		"shell session."
		" "
		"  NOTE_NAME=other-note"
		"  nnote Other-note entry"
		" "
		"Use the -n option to specify a note other than the default: "
		" "
		"  nnote -n example Entry Example"
		" "
		"Piped text is added to a note entry:"
		" "
		"  print piped text | nnote Pipe Example"
		" "
		"Use -v to add the clipboard to an entry:"
		" "
		"  print pasted text | pbcopy && nnote -v Clipboard Example"
		" "
		"The -b and -d options add a bullet and stampstamp:"
		" "
		"  nnote -bd Bullet Timestamp Example"
		" "
		"If the -n option has not be used and NOTE_NAME is not set, a note "
		"named with the current date (yyyymmdd_note) is used."
		" "
		"See repo for updates, comments, issues, etc:"
		"  https://github.com/PostgreSqlStan/note-functions"
	)
	zmodload zsh/zutil
	zparseopts -D -F -- {h,-help}=flag_help -version=flag_version \
		{b,-bullet}=flag_bullet {d,-datetime}=flag_dts {n,-note}:=arg_note \
		{s,-squeeze}=flag_squeeze {v,-paste}=flag_paste \
		|| return 1
	[[ -z "$flag_help" ]] || { print -l $usage && return }
	[[ -n "$flag_version" ]] && { print "${0} version ${_version}" && return }

	## MAIN ##
	local note_bullet=${NOTE_BULLET:-'▶️  '}
	local note_home=${NOTE_HOME:-~/notes}
	local note_name

	if [[ -n "$arg_note" ]]; then
		note_name=${arg_note[-1]}
	else
		note_name=${NOTE_NAME:-$(date "+%Y%m%d")"_note"}
	fi

	# assemble 1st line of entry: [bullet] [date] [arg]
	local header
	[[ -n "$flag_bullet" ]] && header=${header}${note_bullet}
	[[ -n "$flag_dts"  ]] && header=${header}'['$(date)'] '
	[[ -n $@ ]] && header=${header}"${@}"

	# include stdin and/or clipboard in $body
	local body
	[[ -p "/dev/stdin" ]] && body="$(cat)"
	local pasted
	[[ -n "$flag_paste" ]] && pasted="$(pbpaste | col -b)"
	[[ -n "$body" ]] && [[ -n "$pasted" ]] && body="${body}""\n"
	body="${body}""${pasted}"

	if [[ -n "$header" || -n "$body"  ]]; then  # entry not empty
		[[ -n "$header" && -n "$body" ]] && header=${header}"\n"
		[[ -a "${note_home}/${note_name}" ]] && [[ -z "$flag_squeeze" ]] \
			&& header='\n'${header}  # add newline before entry
		print -- "${header}${body}" >> ${note_home}/${note_name}
	else
		print -- "nnote error: empty note entry"
		print -- "See usage:"
		print -- "  nnote -h"
		return 1
	fi
}
alias n=note
alias nn=nnote
